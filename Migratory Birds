import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the migratoryBirds function below.
    static int migratoryBirds(List<Integer> arr) {
        int count1=0,count2=0,count3=0,count4=0,count5=0;
        Integer ar[] = arr.toArray(new Integer[arr.size()]);
        for(int i=0;i<ar.length;i++)
        {
            switch(ar[i])
            {
                case 1: count1++;
                break;
                case 2: count2++;
                break;
                case 3: count3++;
                break;
                case 4: count4++;
                break;
                case 5: count5++;
                break;
            }
        }
        if(count1>=count2 && count1>=count3 && count1>=count4 && count1>=count5)
        {
            return 1;
           
        }
        else  if(count2>=count3 && count2>=count4 && count2>=count5)
        {
            return 2;
            
        }
        else  if(count3>=count4 && count3>=count5)
        {
            return 3;
            
        }
        else  if(count4>=count5)
        {
           return 4;
           
        }
        else{
           return 5;
    
        }
    
        
        
        


    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        String[] arrItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < arrCount; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr.add(arrItem);
        }

        int result = migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
