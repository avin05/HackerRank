import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {
        int ar1[]=new int[n];
        int count=0,temp=0,res=0;
        for(int i=0;i<n;i++)
        {
            ar1[i]=ar[i];

        }
        for(int j=0;j<n;j++)
        {
            temp=ar1[j];
           
            for(int k=j+1;k<n;k++)
            {
                if(ar1[k]!=0 && ar1[k]==temp)
                {
                    count++;
                    ar1[k]=0;
                }
            }
            if(count>0)
            {
                count=(count+1)/2;
                res=res+count;
                count=0;
            }
        }
        
        return res;




    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] ar = new int[n];

        String[] arItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arItem = Integer.parseInt(arItems[i]);
            ar[i] = arItem;
        }

        int result = sockMerchant(n, ar);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
